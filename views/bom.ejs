<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Item Form</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .form-control[readonly] {
      background-color: #e9ecef;
      opacity: 1;
    }
  </style>
  <datalist id="menu_item_codes_list"></datalist>
</head>
<div class="mt-5">
    <div class="d-flex justify-content-center">
      <a href="/menu/view" class="btn btn-info mx-1">View BOM(s)</a>
  </div>
<body>
  <div class="container mt-5">
    <h3>Menu Items</h3>
    <form id="menuForm" action="/menu/add" method="POST">
      <div class="form-row">
        <div class="form-group col-md-2">
          <label for="menu_item_code">Menu Item Code</label>
          <input type="text" class="form-control" id="menu_item_code" name="menu_item_code" required list="menu_item_codes_list">
          <datalist id="menu_item_codes_list"></datalist>
        </div>
        <div class="form-group col-md-6">
          <label for="item_description">Item Description</label>
          <input type="text" class="form-control" id="item_description" name="item_description" required>
        </div>
        <div class="form-group col-md-2">
          <label for="uom">UOM</label>
          <input type="text" class="form-control" id="uom" name="uom" required readonly>
        </div>
        <div class="form-group col-md-1">
          <label for="qty">Quantity</label>
          <input type="number" class="form-control" id="qty" name="qty" required value="1" readonly>
        </div>
      </div>
      
    
      <h3 class="mt-4">Ingredients Lists</h3>
      <table class="table table-bordered" id="itemTable">
        <thead>
          <tr>
            <th>LINENO</th>
            <th>ITEM CODE</th>
            <th>ITEM DESCRIPTION</th>
            <th>UOM</th>
            <th>QTY</th>
            <th>RATE</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>10</td>
            <td><input type="text" class="form-control" name="itemCode[]"></td>
            <td><input type="text" class="form-control" name="itemDescription[]"></td>
            <td><input type="text" class="form-control" name="uom[]"></td>
            <td><input type="decimal" class="form-control" name="qty[]"></td>
            <td><input type="number" class="form-control" name="rate[]"></td>
            <td><button type="button" class="btn btn-danger" onclick="deleteRow(this)">Delete</button></td>
          </tr>
        </tbody>
      </table>
    
      <button type="button" class="btn btn-secondary" onclick="addRow()">Add Row</button>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script>
    function addRow() {
      const table = document.getElementById("itemTable").getElementsByTagName('tbody')[0];
      const rowCount = table.rows.length;
      const row = table.insertRow(rowCount);

      // Add cells and input elements
      const cell1 = row.insertCell(0);
      const cell2 = row.insertCell(1);
      const cell3 = row.insertCell(2);
      const cell4 = row.insertCell(3);
      const cell5 = row.insertCell(4);
      const cell6 = row.insertCell(5);
      const cell7 = row.insertCell(6);

      cell1.innerHTML = (rowCount + 1) * 10;
      cell2.innerHTML = `<input type="text" class="form-control" name="itemCode[]">`;
      cell3.innerHTML = `<input type="text" class="form-control" name="itemDescription[]">`;
      cell4.innerHTML = `<input type="text" class="form-control" name="uom[]">`;
      cell5.innerHTML = `<input type="decimal" class="form-control" name="qty[]">`;
      cell6.innerHTML = `<input type="number" class="form-control" name="rate[]">`;
      cell7.innerHTML = `<button type="button" class="btn btn-danger" onclick="deleteRow(this)">Delete</button>`;
    }

    function deleteRow(button) {
      const row = button.closest('tr');
      row.remove();
    }
    document.getElementById('menuForm').addEventListener('submit', function (e) {
  e.preventDefault();

  const formData = new FormData(this);
  const data = {};
  formData.forEach((value, key) => {
    if (!data[key]) {
      data[key] = [];
    }
    data[key].push(value);
  });

  fetch('/menu/add', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(data)
  })
  .then(response => response.text())
  .then(data => {
    alert(data);
  })
  .catch((error) => {
    console.error('Error:', error);
  });
});
  </script>
<script>
  const menuItemCodeInput = document.getElementById('menu_item_code');
const itemDescriptionInput = document.getElementById('item_description');
const uomInput = document.getElementById('uom');

menuItemCodeInput.addEventListener('input', async () => {
  const menuItemCode = menuItemCodeInput.value.trim();
  if (menuItemCode !== '') {
    try {
      const response = await fetch('/fetch-item-data', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ menuItemCode })
      });
      const data = await response.json();
      if (data) {
        itemDescriptionInput.value = data.item_description;
        uomInput.value = data.uom;
      } else {
        itemDescriptionInput.value = '';
        uomInput.value = '';
      }
    } catch (error) {
      console.error('Error:', error);
    }
  } else {
    itemDescriptionInput.value = '';
    uomInput.value = '';
  }
});
</script>

<script>
  const itemTableBody = document.getElementById('itemTable').getElementsByTagName('tbody')[0];

itemTableBody.addEventListener('input', async (event) => {
  if (event.target.name === 'itemCode[]') {
    const itemCode = event.target.value.trim();
    if (itemCode !== '') {
      try {
        const response = await fetch('/fetch-ingredient-data', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ itemCode })
        });
        const data = await response.json();
        if (data) {
          // Update the corresponding input fields with the fetched data
          const row = event.target.closest('tr');
          const itemDescriptionInput = row.querySelector('input[name="itemDescription[]"]');
          const uomInput = row.querySelector('input[name="uom[]"]');
          const rateInput = row.querySelector('input[name="rate[]"]');
          const qtyInput = row.querySelector('input[name="qty[]"]');
          itemDescriptionInput.value = data.item_description;
          uomInput.value = data.uom;
          rateInput.value = data.rate;
          qtyInput.value = data.qty;
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }
  }
});
</script>
</body>
</html>
